@model IEnumerable<Category>
@{
    ViewBag.Title = "Manage Categories";
}
@section Styles {
        <style>
            #categoryList {
                min-height: 200px;
            }
            #globalError {
                margin-bottom: 15px;
                display: none;
            }
        </style>
}

<h2>Manage Categories</h2>

@if (TempData["Success"] != null)
{
        <div class="alert alert-success alert-dismissible fade show" role="alert" id="successAlert">
        @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
}
@if (TempData["Error"] != null)
{
        <div class="alert alert-danger alert-dismissible fade show" role="alert" id="errorAlert">
        @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
}
<div id="globalError" class="alert alert-danger"></div>

<div class="mb-4">
    <div class="row">
        <div class="col-md-4">
            <input type="text" id="searchName" class="form-control" placeholder="Search by name" />
        </div>
        <div class="col-md-8">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">Create New Category</button>
        </div>
    </div>
</div>

<div id="categoryList">
    @await Html.PartialAsync("_CategoryList", Model)
</div>

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryModalLabel">Add Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addCategoryForm" asp-action="Add" asp-controller="Category" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="form-group">
                        <label for="addCategoryName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="addCategoryName" name="Name" required />
                        <span class="text-danger field-validation-error" id="addCategoryNameError"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editCategoryForm" asp-action="Edit" asp-controller="Category" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="editCategoryId" name="CategoryId" />
                    <div class="form-group">
                        <label for="editCategoryName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="editCategoryName" name="Name" required />
                        <span class="text-danger field-validation-error" id="editCategoryNameError"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Category Modal -->
<div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="deleteCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteCategoryModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="deleteCategoryForm" asp-action="Delete" asp-controller="Category" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="deleteCategoryId" name="id" />
                    <p>Are you sure you want to delete this category?</p>
                    <span class="text-danger" id="deleteError"></span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script>
            $(document).ready(function () {
                // Auto-dismiss alerts after 3 seconds
                setTimeout(function () {
                    $('#successAlert, #errorAlert').fadeOut('slow');
                }, 3000);

                // Show global message (error or success)
                function showGlobalMessage(message, isSuccess = false) {
                    $('#globalError')
                        .removeClass('alert-danger alert-success')
                        .addClass(isSuccess ? 'alert-success' : 'alert-danger')
                        .text(message)
                        .show();
                    setTimeout(function () {
                        $('#globalError').fadeOut('slow');
                    }, 3000);
                }

                // Dynamic Search
                function performSearch(clearSearch = false) {
                    var searchName = clearSearch ? '' : $('#searchName').val();
                    if (clearSearch) {
                        $('#searchName').val('');
                    }
                    console.log('Performing search, clearSearch:', clearSearch);
                    $.ajax({
                        url: '@Url.Action("Search", "Category")',
                        type: 'GET',
                        data: { searchName: searchName },
                        success: function (data) {
                            console.log('Search AJAX success, data length:', data.length);
                            $('#categoryList').html(data);
                        },
                        error: function (xhr, status, error) {
                            console.error('Search AJAX error:', status, error, xhr.status, xhr.responseText);
                            showGlobalMessage('Error loading categories: ' + (xhr.responseText || 'Request failed (Status: ' + xhr.status + ')'));
                            $('#categoryList').html('<p>Error loading categories.</p>');
                        }
                    });
                }

                $('#searchName').on('input', function () {
                    performSearch();
                });

                // Initial load
                performSearch();

                // Clean up modal state
                $('#addCategoryModal, #editCategoryModal, #deleteCategoryModal').on('show.bs.modal', function () {
                    $('.modal-backdrop').remove();
                    $('body').removeClass('modal-open');
                    $('#addCategoryNameError, #editCategoryNameError, #deleteError').text('');
                });

                $('#addCategoryModal, #editCategoryModal, #deleteCategoryModal').on('hidden.bs.modal', function () {
                    setTimeout(function () {
                        $('.modal-backdrop').remove();
                        $('body').removeClass('modal-open');
                    }, 100);
                });

                // Add Category
                $('#addCategoryForm').on('submit', function (e) {
                    e.preventDefault();
                    console.log('Add form submitted');
                    $.ajax({
                        url: '@Url.Action("Add", "Category")',
                        type: 'POST',
                        data: $(this).serialize(),
                        success: function (response) {
                            console.log('Add AJAX response:', JSON.stringify(response, null, 2));
                            if (response.success) {
                                $('#addCategoryModal').modal('hide');
                                $('#addCategoryForm')[0].reset();
                                $('#addCategoryNameError').text('');
                                performSearch(true);
                                showGlobalMessage('Category added successfully.', true);
                            } else {
                                $('#addCategoryNameError').text(response.errors ? response.errors.join(', ') : 'Failed to add category.');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Add AJAX error:', status, error, xhr.status, xhr.responseText);
                            $('#addCategoryNameError').text('An error occurred. Please try again.');
                        }
                    });
                });

                // Edit Category
                $(document).on('click', '.edit-btn', function () {
                    var categoryId = $(this).data('id');
                    console.log('Edit button clicked for category ID:', categoryId);
                    if (!categoryId || isNaN(categoryId)) {
                        showGlobalMessage('Invalid category ID.');
                        return;
                    }
                    $.ajax({
                        url: '@Url.Action("Edit", "Category")',
                        type: 'GET',
                        data: { id: categoryId },
                        success: function (response) {
                            console.log('Edit GET response:', JSON.stringify(response, null, 2));
                            if (response && response.success && response.category && response.category.categoryId) {
                                $('#editCategoryId').val(response.category.categoryId);
                                $('#editCategoryName').val(response.category.name);
                                $('#editCategoryNameError').text('');
                                $('#editCategoryModal').modal('show');
                            } else {
                                showGlobalMessage(response && response.message ? response.message : 'Failed to load category data.');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Edit GET AJAX error:', status, error, xhr.status, xhr.responseText);
                            showGlobalMessage('Error loading category data: ' + (xhr.responseText || 'Request failed (Status: ' + xhr.status + ')'));
                        }
                    });
                });

                $('#editCategoryForm').on('submit', function (e) {
                    e.preventDefault();
                    var categoryId = $('#editCategoryId').val();
                    console.log('Edit form submitted, CategoryId:', categoryId);
                    if (!categoryId || isNaN(categoryId)) {
                        $('#editCategoryNameError').text('Category ID is missing or invalid.');
                        return;
                    }
                    $.ajax({
                        url: '@Url.Action("Edit", "Category")',
                        type: 'POST',
                        data: $(this).serialize(),
                        success: function (response) {
                            console.log('Edit POST response:', JSON.stringify(response, null, 2));
                            if (response && response.success) {
                                $('#editCategoryModal').modal('hide');
                                $('#editCategoryForm')[0].reset();
                                $('#editCategoryNameError').text('');
                                performSearch(true);
                                showGlobalMessage('Category updated successfully.', true);
                            } else {
                                $('#editCategoryNameError').text(response && response.message ? response.message : (response && response.errors ? response.errors.join(', ') : 'Failed to save category.'));
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Edit POST AJAX error:', status, error, xhr.status, xhr.responseText);
                            $('#editCategoryNameError').text('Error saving category: ' + (xhr.responseText || 'Request failed (Status: ' + xhr.status + ')'));
                        }
                    });
                });

                // Delete Category
                $(document).on('click', '.delete-btn', function () {
                    var categoryId = $(this).data('id');
                    console.log('Delete button clicked for category ID:', categoryId);
                    if (!categoryId || isNaN(categoryId)) {
                        showGlobalMessage('Invalid category ID.');
                        return;
                    }
                    $.ajax({
                        url: '@Url.Action("DeleteCheck", "Category")',
                        type: 'GET',
                        data: { id: categoryId },
                        success: function (response) {
                            console.log('DeleteCheck GET response:', JSON.stringify(response, null, 2));
                            if (response && response.success && response.category && response.category.categoryId) {
                                $('#deleteCategoryId').val(response.category.categoryId);
                                $('#deleteError').text('');
                                $('#deleteCategoryModal').modal('show');
                            } else {
                                showGlobalMessage(response && response.message ? response.message : 'Failed to load category data.');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('DeleteCheck GET AJAX error:', status, error, xhr.status, xhr.responseText);
                            showGlobalMessage('Error loading category data: ' + (xhr.responseText || 'Request failed (Status: ' + xhr.status + ')'));
                        }
                    });
                });

                $('#deleteCategoryForm').on('submit', function (e) {
                    e.preventDefault();
                    var categoryId = $('#deleteCategoryId').val();
                    console.log('Delete form submitted, CategoryId:', categoryId);
                    if (!categoryId || isNaN(categoryId)) {
                        $('#deleteError').text('Category ID is missing or invalid.');
                        return;
                    }
                    $.ajax({
                        url: '@Url.Action("Delete", "Category")',
                        type: 'POST',
                        data: $(this).serialize(),
                        success: function (response) {
                            console.log('Delete POST response:', JSON.stringify(response, null, 2));
                            if (response && response.success) {
                                $('#deleteCategoryModal').modal('hide');
                                $('#deleteCategoryForm')[0].reset();
                                $('#deleteError').text('');
                                performSearch(true);
                                showGlobalMessage('Category deleted successfully.', true);
                            } else {
                                $('#deleteError').text(response && response.message ? response.message : 'Failed to delete category.');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Delete POST AJAX error:', status, error, xhr.status, xhr.responseText);
                            $('#deleteError').text('Error deleting category: ' + (xhr.responseText || 'Request failed (Status: ' + xhr.status + ')'));
                        }
                    });
                });
            });
        </script>
}
@model IEnumerable<Product>
@{
    ViewData["Title"] = "Welcome to Mexicano";
}
<style>
    .hero-section {
        background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('/images/restaurant2-bg.jpg') no-repeat center center/cover;
        min-height: 80vh;
        display: flex;
        align-items: center;
    }

    .dynamic-text {
        color: var(--hero-text-color, #e68b37); /* Default coral color */
        font-size: 3.5rem;
        font-weight: 700;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        transition: color 0.5s ease-in-out;
    }

    .hero-cta-buttons .btn {
        transition: all 0.3s ease;
    }

        .hero-cta-buttons .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(255, 107, 107, 0.3);
        }

    @@keyframes textSwitch {
        0%, 100% {
            opacity: 1;
            transform: translateY(0);
        }

        50% {
            opacity: 0;
            transform: translateY(-20px);
        }
    }

    .dynamic-text span {
        display: inline-block;
        animation: textSwitch 12s infinite;
    }
</style>

<div class="hero-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10 text-center">
                <h1 class="display-3 fw-bold mb-4">
                    <span class="dynamic-text" id="dynamicHeading"></span>
                </h1>
                <p class="lead mb-5 text-light">Discover a symphony of flavors using the freshest local ingredients</p>
                <div class="hero-cta-buttons d-flex gap-3 justify-content-center">
                    <a asp-controller="Order" asp-action="Create" class="btn btn-primary btn-lg px-4 py-3">
                        <i class="bi bi-menu-up me-2"></i>Explore Our Menu
                    </a>
                    <a href="#featured" class="btn btn-outline-light btn-lg px-4 py-3">
                        <i class="bi bi-stars me-2"></i>Today's Specials
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container my-5 py-5" id="featured">
    <div class="text-center mb-5">
        <h2 class="fw-bold mb-3">Chef's Specialties</h2>
        <p class="text-muted lead">Handcrafted dishes that tell our culinary story</p>
    </div>

    @if (!Model.Any())
    {
            <div class="alert alert-info text-center">
                <p class="mb-0">No featured dishes available at the moment. Please check back later.</p>
            </div>
    }
    else
    {
            <div class="row g-4">
            @foreach (var product in Model.Take(3))
            {
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="position-relative">
                                    <img src="@Url.Content("~/images/" + product.ImageUrl)" class="card-img-top" alt="@product.Name">
                                    <span class="position-absolute top-0 end-0 bg-success text-white px-2 py-1 m-2 rounded-pill small">
                                @(product.Stock > 0 ? "Available" : "Sold Out")
                                    </span>
                                </div>
                                <div class="card-body d-flex flex-column">
                                    <div class="mb-3">
                                        <h5 class="card-title fw-bold">@product.Name</h5>
                                        <p class="card-text text-muted">@product.Description</p>
                                    </div>
                                    <div class="mt-auto">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="h5 text-primary fw-bold mb-0">@product.Price.ToString("C")</span>
                                            <a asp-controller="Order" asp-action="Create" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-plus-lg me-1"></i>Add to Order
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
            }
            </div>

            <div class="text-center mt-5">
                <a asp-controller="Order" asp-action="Create" class="btn btn-primary px-4 py-2">
                    View Full Menu <i class="bi bi-arrow-right ms-2"></i>
                </a>
            </div>
    }
</div>

<div class="bg-light py-5">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-6 mb-4 mb-lg-0">
                <h2 class="fw-bold mb-4">Our Culinary Philosophy</h2>
                <p class="lead mb-4">At Mexicano , we believe in the power of fresh, locally-sourced ingredients to create unforgettable dining experiences.</p>
                <ul class="list-unstyled">
                    <li class="mb-2"><i class="bi bi-check-circle-fill text-primary me-2"></i>Farm-to-table ingredients</li>
                    <li class="mb-2"><i class="bi bi-check-circle-fill text-primary me-2"></i>Seasonal menu rotations</li>
                    <li class="mb-2"><i class="bi bi-check-circle-fill text-primary me-2"></i>Artisanal preparation techniques</li>
                </ul>
            </div>
            <div class="col-lg-6">
                <img src="/images/chef.png" alt="Chef preparing food" class="img-fluid rounded-lg shadow">
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        const messages = [
            "Artisanal Cuisine, Crafted with Passion",
            "Seasonal Flavors, Timeless Techniques",
            "Where Tradition Meets Innovation",
            "Elevating Everyday Dining"
        ];

        let currentIndex = 0;
        const headingElement = document.getElementById('dynamicHeading');

        function updateText() {
            headingElement.style.opacity = 0;
            setTimeout(() => {
                headingElement.textContent = messages[currentIndex];
                headingElement.style.opacity = 1;
                currentIndex = (currentIndex + 1) % messages.length;
            }, 500);
        }

        // Initial update
        updateText();
        // Update every 5 seconds
        setInterval(updateText, 2000);

        // Optional: Add color transition
        const colors = ['#ff6b6b', '#4ecdc4', '#ffe66d', '#ff9f43'];
        let colorIndex = 0;
        
        function updateColor() {
            document.documentElement.style.setProperty(
                '--hero-text-color', 
                colors[colorIndex]
            );
            colorIndex = (colorIndex + 1) % colors.length;
        }
        
        // Uncomment to enable color transitions
        // setInterval(updateColor, 7000);
    </script>
    }